{"ast":null,"code":"import { makeAutoObservable } from \"mobx\";\nimport AuthService from \"../services/AuthService\";\nimport ProfileService from \"../services/ProfileService\";\nimport axios from \"axios\";\nimport { API_URL } from \"../http\";\nexport default class Store {\n  constructor() {\n    this.user = {};\n    this.isAuth = false;\n    this.isLoading = false;\n    makeAutoObservable(this);\n  }\n  setAuth(bool) {\n    this.isAuth = bool;\n  }\n  setUser(user) {\n    this.user = user;\n  }\n  setLoading(bool) {\n    this.isLoading = bool;\n  }\n  async fetchCurrentUser() {\n    try {\n      const response = await ProfileService.fetchCurrentUser(); // Метод для получения данных текущего пользователя из базы данных\n      this.setUser(response.data); // Установить весь объект пользователя, а не только имя\n    } catch (error) {\n      console.error('Error fetching current user:', error);\n    }\n  }\n  async login(email, password) {\n    try {\n      const response = await AuthService.login(email, password);\n      console.log(response);\n      localStorage.setItem('token', response.data.accessToken);\n      this.setAuth(true);\n      this.setUser(response.data.user);\n    } catch (e) {\n      var _e$response, _e$response$data;\n      console.log((_e$response = e.response) === null || _e$response === void 0 ? void 0 : (_e$response$data = _e$response.data) === null || _e$response$data === void 0 ? void 0 : _e$response$data.message);\n    }\n  }\n  async registration(email, password) {\n    try {\n      const response = await AuthService.registration(email, password);\n      console.log(response);\n      localStorage.setItem('token', response.data.accessToken);\n      this.setAuth(true);\n      this.setUser(response.data.user);\n    } catch (e) {\n      var _e$response2, _e$response2$data;\n      console.log((_e$response2 = e.response) === null || _e$response2 === void 0 ? void 0 : (_e$response2$data = _e$response2.data) === null || _e$response2$data === void 0 ? void 0 : _e$response2$data.message);\n    }\n  }\n  async logout() {\n    try {\n      const response = await AuthService.logout();\n      localStorage.removeItem('token');\n      this.setAuth(false);\n      this.setUser({});\n    } catch (e) {\n      var _e$response3, _e$response3$data;\n      console.log((_e$response3 = e.response) === null || _e$response3 === void 0 ? void 0 : (_e$response3$data = _e$response3.data) === null || _e$response3$data === void 0 ? void 0 : _e$response3$data.message);\n    }\n  }\n  async checkAuth() {\n    this.setLoading(true);\n    try {\n      const response = await axios.get(`${API_URL}/refresh`, {\n        withCredentials: true\n      });\n      console.log(response);\n      localStorage.setItem('token', response.data.accessToken);\n      this.setAuth(true);\n      this.setUser(response.data.user);\n    } catch (e) {\n      var _e$response4, _e$response4$data;\n      console.log((_e$response4 = e.response) === null || _e$response4 === void 0 ? void 0 : (_e$response4$data = _e$response4.data) === null || _e$response4$data === void 0 ? void 0 : _e$response4$data.message);\n    } finally {\n      this.setLoading(false);\n    }\n  }\n}","map":{"version":3,"names":["makeAutoObservable","AuthService","ProfileService","axios","API_URL","Store","constructor","user","isAuth","isLoading","setAuth","bool","setUser","setLoading","fetchCurrentUser","response","data","error","console","login","email","password","log","localStorage","setItem","accessToken","e","_e$response","_e$response$data","message","registration","_e$response2","_e$response2$data","logout","removeItem","_e$response3","_e$response3$data","checkAuth","get","withCredentials","_e$response4","_e$response4$data"],"sources":["E:/Diplom/client/src/store/store.ts"],"sourcesContent":["import { makeAutoObservable } from \"mobx\";\r\nimport { IUser } from \"../models/IUser\";\r\nimport AuthService from \"../services/AuthService\";\r\nimport UserService from \"../services/UserService\";\r\nimport ProfileService from \"../services/ProfileService\";\r\nimport axios from \"axios\";\r\nimport { AuthResponse } from \"../models/response/AuthResponse\";\r\nimport { API_URL } from \"../http\";\r\n\r\nexport default class Store {\r\n    user={} as IUser;\r\n    isAuth = false;\r\n    isLoading = false;\r\n\r\n    constructor(){\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    setAuth(bool: boolean){\r\n        this.isAuth = bool;\r\n    }\r\n    \r\n    setUser(user: IUser){\r\n        this.user = user;\r\n    }\r\n\r\n    setLoading(bool: boolean) {\r\n        this.isLoading = bool;\r\n    }\r\n\r\n    async fetchCurrentUser() {\r\n        try {\r\n            const response = await ProfileService.fetchCurrentUser(); // Метод для получения данных текущего пользователя из базы данных\r\n            this.setUser(response.data); // Установить весь объект пользователя, а не только имя\r\n        } catch (error) {\r\n            console.error('Error fetching current user:', error);\r\n        }\r\n    }\r\n    \r\n\r\n    async login(email: string, password: string) {\r\n        try {\r\n            const response = await AuthService.login(email, password);\r\n            console.log(response)\r\n            localStorage.setItem('token', response.data.accessToken);\r\n            this.setAuth(true);\r\n            this.setUser(response.data.user);\r\n        } catch (e: any){\r\n            console.log(e.response?.data?.message);\r\n        }\r\n    }\r\n\r\n    async registration(email: string, password: string) {\r\n        try {\r\n            const response = await AuthService.registration(email, password);\r\n            console.log(response)\r\n            localStorage.setItem('token', response.data.accessToken);\r\n            this.setAuth(true);\r\n            this.setUser(response.data.user);\r\n        } catch (e: any){\r\n            console.log(e.response?.data?.message);\r\n        }\r\n    }\r\n\r\n    async logout() {\r\n        try {\r\n            const response = await AuthService.logout();\r\n            localStorage.removeItem('token');\r\n            this.setAuth(false);\r\n            this.setUser({} as IUser);\r\n        } catch (e: any){\r\n            console.log(e.response?.data?.message);\r\n        }\r\n    }\r\n\r\n    async checkAuth() {\r\n        this.setLoading(true);\r\n        try {\r\n            const response = await axios.get<AuthResponse>(`${API_URL}/refresh`, {withCredentials: true})\r\n            console.log(response);\r\n            localStorage.setItem('token', response.data.accessToken);\r\n            this.setAuth(true);\r\n            this.setUser(response.data.user);\r\n        } catch (e: any){\r\n            console.log(e.response?.data?.message);\r\n        } finally{\r\n            this.setLoading(false);\r\n        }\r\n    }\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}