{"ast":null,"code":"import axios from 'axios';\nexport const API_URL = `http://localhost:5000/api`;\nconst $api = axios.create({\n  withCredentials: true,\n  baseURL: API_URL\n});\n$api.interceptors.request.use(config => {\n  config.headers.Authorization = `Bearer ${localStorage.getItem('token')}`;\n  return config;\n});\n$api.interceptors.response.use(config => {\n  return config;\n}, async error => {\n  const originalRequest = error.config;\n  if (error.response.status == 401 && error.config && !error.config._isRetry) {\n    originalRequest._isRetry = true;\n    try {\n      const response = await axios.get(`${API_URL}/refresh`, {\n        withCredentials: true\n      });\n      localStorage.setItem('token', response.data.accessToken);\n      return $api.request(originalRequest);\n    } catch (e) {\n      console.log('Не авторизован');\n    }\n  }\n  throw error;\n});\nexport default $api;","map":{"version":3,"names":["axios","API_URL","$api","create","withCredentials","baseURL","interceptors","request","use","config","headers","Authorization","localStorage","getItem","response","error","originalRequest","status","_isRetry","get","setItem","data","accessToken","e","console","log"],"sources":["E:/Diplom/client/src/http/index.ts"],"sourcesContent":["import axios from 'axios';\r\nimport { error } from 'console';\r\nimport { config } from 'process';\r\nimport { AuthResponse } from '../models/response/AuthResponse';\r\n\r\nexport const API_URL= `http://localhost:5000/api`\r\n\r\nconst $api = axios.create({\r\n    withCredentials: true,\r\n    baseURL: API_URL\r\n})\r\n\r\n$api.interceptors.request.use((config)=>{\r\n    config.headers.Authorization= `Bearer ${localStorage.getItem('token')}`\r\n    return config;\r\n})\r\n\r\n$api.interceptors.response.use((config) => {\r\n    return config;\r\n}, async (error) => {\r\n    const originalRequest = error.config;\r\n    if (error.response.status == 401 && error.config && !error.config._isRetry) {\r\n        originalRequest._isRetry = true;\r\n        try {\r\n            const response = await axios.get<AuthResponse>(`${API_URL}/refresh`, {withCredentials: true})\r\n            localStorage.setItem('token', response.data.accessToken);\r\n            return $api.request(originalRequest);\r\n        } catch (e) {\r\n            console.log('Не авторизован');\r\n        }\r\n        \r\n    }\r\n    throw error;\r\n})\r\n\r\nexport default $api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAKzB,OAAO,MAAMC,OAAO,GAAG,2BAA0B;AAEjD,MAAMC,IAAI,GAAGF,KAAK,CAACG,MAAM,CAAC;EACtBC,eAAe,EAAE,IAAI;EACrBC,OAAO,EAAEJ;AACb,CAAC,CAAC;AAEFC,IAAI,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAG;EACpCA,MAAM,CAACC,OAAO,CAACC,aAAa,GAAG,UAASC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAE,EAAC;EACvE,OAAOJ,MAAM;AACjB,CAAC,CAAC;AAEFP,IAAI,CAACI,YAAY,CAACQ,QAAQ,CAACN,GAAG,CAAEC,MAAM,IAAK;EACvC,OAAOA,MAAM;AACjB,CAAC,EAAE,MAAOM,KAAK,IAAK;EAChB,MAAMC,eAAe,GAAGD,KAAK,CAACN,MAAM;EACpC,IAAIM,KAAK,CAACD,QAAQ,CAACG,MAAM,IAAI,GAAG,IAAIF,KAAK,CAACN,MAAM,IAAI,CAACM,KAAK,CAACN,MAAM,CAACS,QAAQ,EAAE;IACxEF,eAAe,CAACE,QAAQ,GAAG,IAAI;IAC/B,IAAI;MACA,MAAMJ,QAAQ,GAAG,MAAMd,KAAK,CAACmB,GAAG,CAAgB,GAAElB,OAAQ,UAAS,EAAE;QAACG,eAAe,EAAE;MAAI,CAAC,CAAC;MAC7FQ,YAAY,CAACQ,OAAO,CAAC,OAAO,EAAEN,QAAQ,CAACO,IAAI,CAACC,WAAW,CAAC;MACxD,OAAOpB,IAAI,CAACK,OAAO,CAACS,eAAe,CAAC;IACxC,CAAC,CAAC,OAAOO,CAAC,EAAE;MACRC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;IACjC;EAEJ;EACA,MAAMV,KAAK;AACf,CAAC,CAAC;AAEF,eAAeb,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}