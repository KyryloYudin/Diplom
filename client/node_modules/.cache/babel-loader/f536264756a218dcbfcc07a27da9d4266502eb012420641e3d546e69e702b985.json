{"ast":null,"code":"var _jsxFileName = \"E:\\\\Diplom\\\\client\\\\src\\\\components\\\\Profile\\\\Profile.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useContext } from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { Context } from '../..';\nimport ProfileService from '../../services/ProfileService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfileComponent = _s(observer(_c = _s(() => {\n  _s();\n  const {\n    store\n  } = useContext(Context);\n  const [profiles, setProfiles] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        if (localStorage.getItem('token')) {\n          await store.checkAuth();\n        }\n        const userId = store.getUserId();\n        if (userId) {\n          const response = await ProfileService.fetchProfiles(userId);\n          setProfiles(response.data);\n        } else {\n          console.error(\"User ID is not available\");\n        }\n      } catch (error) {\n        console.error('Error during authentication check:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [store]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 16\n    }, this);\n  }\n  if (!profiles.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No profiles available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: profiles.map(profile => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Username: \", profile.userName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Course: \", profile.course]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this)]\n      }, profile.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}, \"vNTWWAGGQiM3SZf6J5302uLyvVA=\")), \"vNTWWAGGQiM3SZf6J5302uLyvVA=\");\n_c2 = ProfileComponent;\nexport default ProfileComponent;\nvar _c, _c2;\n$RefreshReg$(_c, \"ProfileComponent$observer\");\n$RefreshReg$(_c2, \"ProfileComponent\");","map":{"version":3,"names":["React","useEffect","useState","useContext","observer","Context","ProfileService","jsxDEV","_jsxDEV","ProfileComponent","_s","_c","store","profiles","setProfiles","loading","setLoading","fetchData","localStorage","getItem","checkAuth","userId","getUserId","response","fetchProfiles","data","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","profile","userName","course","id","_c2","$RefreshReg$"],"sources":["E:/Diplom/client/src/components/Profile/Profile.tsx"],"sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Context } from '../..';\r\nimport ProfileService from '../../services/ProfileService';\r\nimport { IProfile } from '../../models/IProfile';\r\n\r\nconst ProfileComponent = observer(() => {\r\n    const { store } = useContext(Context);\r\n    const [profiles, setProfiles] = useState<IProfile[]>([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                if (localStorage.getItem('token')) {\r\n                    await store.checkAuth();\r\n                }\r\n                const userId = store.getUserId();\r\n                if (userId) {\r\n                    const response = await ProfileService.fetchProfiles(userId);\r\n                    setProfiles(response.data);\r\n                } else {\r\n                    console.error(\"User ID is not available\");\r\n                }\r\n            } catch (error) {\r\n                console.error('Error during authentication check:', error);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        }\r\n\r\n        fetchData();\r\n    }, [store]);\r\n\r\n    if (loading) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    if (!profiles.length) {\r\n        return <div>No profiles available</div>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Profile</h1>\r\n            <div>\r\n                {profiles.map(profile => (\r\n                    <div key={profile.id}>\r\n                        <p>Username: {profile.userName}</p>\r\n                        <p>Course: {profile.course}</p>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default ProfileComponent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}