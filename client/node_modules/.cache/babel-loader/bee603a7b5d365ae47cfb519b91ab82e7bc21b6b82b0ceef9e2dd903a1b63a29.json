{"ast":null,"code":"import { makeAutoObservable } from \"mobx\";\nimport AuthService from \"../services/AuthService\";\nimport axios from \"axios\";\nimport { API_URL } from \"../http\";\nimport GradeService from \"../services/GradeService\"; // Добавьте этот импорт\n\n// Добавьте этот импорт\n\nexport default class Store {\n  constructor() {\n    this.user = {};\n    this.isAuth = false;\n    this.isLoading = false;\n    this.grades = [];\n    // Добавьте состояние для хранения оценок\n    this.grade = null;\n    makeAutoObservable(this);\n  }\n  setAuth(bool) {\n    this.isAuth = bool;\n  }\n  setUser(user) {\n    this.user = user;\n  }\n  setLoading(bool) {\n    this.isLoading = bool;\n  }\n  getUserId() {\n    console.log('User ID:', this.user.id);\n    return this.user.id; // Убедитесь, что здесь возвращается строка\n  }\n  async login(email, password) {\n    try {\n      const response = await AuthService.login(email, password);\n      console.log(response);\n      localStorage.setItem('token', response.data.accessToken);\n      this.setAuth(true);\n      this.setUser(response.data.user);\n    } catch (e) {\n      var _e$response, _e$response$data;\n      console.log((_e$response = e.response) === null || _e$response === void 0 ? void 0 : (_e$response$data = _e$response.data) === null || _e$response$data === void 0 ? void 0 : _e$response$data.message);\n    }\n  }\n  async registration(email, password) {\n    try {\n      const response = await AuthService.registration(email, password);\n      console.log(response);\n      localStorage.setItem('token', response.data.accessToken);\n      this.setAuth(true);\n      this.setUser(response.data.user);\n    } catch (e) {\n      var _e$response2, _e$response2$data;\n      console.log((_e$response2 = e.response) === null || _e$response2 === void 0 ? void 0 : (_e$response2$data = _e$response2.data) === null || _e$response2$data === void 0 ? void 0 : _e$response2$data.message);\n    }\n  }\n  async logout() {\n    try {\n      await AuthService.logout();\n      localStorage.removeItem('token');\n      this.setAuth(false);\n      this.setUser({});\n    } catch (e) {\n      var _e$response3, _e$response3$data;\n      console.log((_e$response3 = e.response) === null || _e$response3 === void 0 ? void 0 : (_e$response3$data = _e$response3.data) === null || _e$response3$data === void 0 ? void 0 : _e$response3$data.message);\n    }\n  }\n  async checkAuth() {\n    this.setLoading(true);\n    try {\n      const response = await axios.get(`${API_URL}/refresh`, {\n        withCredentials: true\n      });\n      console.log(response);\n      localStorage.setItem('token', response.data.accessToken);\n      this.setAuth(true);\n      this.setUser(response.data.user);\n    } catch (e) {\n      var _e$response4, _e$response4$data;\n      console.log((_e$response4 = e.response) === null || _e$response4 === void 0 ? void 0 : (_e$response4$data = _e$response4.data) === null || _e$response4$data === void 0 ? void 0 : _e$response4$data.message);\n    } finally {\n      this.setLoading(false);\n    }\n  }\n  // Добавьте состояние для одной оценки\n\n  setGrades(grades) {\n    this.grades = grades;\n  }\n  setGrade(grade) {\n    this.grade = grade;\n  }\n  async fetchGrades(profileId) {\n    try {\n      const response = await GradeService.getGrades(profileId);\n      this.setGrades(response.data);\n    } catch (e) {\n      var _e$response5, _e$response5$data;\n      console.log((_e$response5 = e.response) === null || _e$response5 === void 0 ? void 0 : (_e$response5$data = _e$response5.data) === null || _e$response5$data === void 0 ? void 0 : _e$response5$data.message);\n    }\n  }\n  async fetchGrade(gradeId) {\n    try {\n      const response = await GradeService.getGrade(gradeId);\n      this.setGrade(response.data);\n    } catch (e) {\n      var _e$response6, _e$response6$data;\n      console.log((_e$response6 = e.response) === null || _e$response6 === void 0 ? void 0 : (_e$response6$data = _e$response6.data) === null || _e$response6$data === void 0 ? void 0 : _e$response6$data.message);\n    }\n  }\n  async addGrade(profileId, gradeData) {\n    try {\n      const response = await GradeService.addGrade(profileId, gradeData);\n      this.grades.push(response.data);\n    } catch (e) {\n      var _e$response7, _e$response7$data;\n      console.log((_e$response7 = e.response) === null || _e$response7 === void 0 ? void 0 : (_e$response7$data = _e$response7.data) === null || _e$response7$data === void 0 ? void 0 : _e$response7$data.message);\n    }\n  }\n  async updateGrade(gradeId, gradeData) {\n    try {\n      const response = await GradeService.updateGrade(gradeId, gradeData);\n      this.grades = this.grades.map(grade => grade._id === gradeId ? response.data : grade);\n    } catch (e) {\n      var _e$response8, _e$response8$data;\n      console.log((_e$response8 = e.response) === null || _e$response8 === void 0 ? void 0 : (_e$response8$data = _e$response8.data) === null || _e$response8$data === void 0 ? void 0 : _e$response8$data.message);\n    }\n  }\n  async deleteGrade(gradeId) {\n    try {\n      await GradeService.deleteGrade(gradeId);\n      this.grades = this.grades.filter(grade => grade._id !== gradeId);\n    } catch (e) {\n      var _e$response9, _e$response9$data;\n      console.log((_e$response9 = e.response) === null || _e$response9 === void 0 ? void 0 : (_e$response9$data = _e$response9.data) === null || _e$response9$data === void 0 ? void 0 : _e$response9$data.message);\n    }\n  }\n}","map":{"version":3,"names":["makeAutoObservable","AuthService","axios","API_URL","GradeService","Store","constructor","user","isAuth","isLoading","grades","grade","setAuth","bool","setUser","setLoading","getUserId","console","log","id","login","email","password","response","localStorage","setItem","data","accessToken","e","_e$response","_e$response$data","message","registration","_e$response2","_e$response2$data","logout","removeItem","_e$response3","_e$response3$data","checkAuth","get","withCredentials","_e$response4","_e$response4$data","setGrades","setGrade","fetchGrades","profileId","getGrades","_e$response5","_e$response5$data","fetchGrade","gradeId","getGrade","_e$response6","_e$response6$data","addGrade","gradeData","push","_e$response7","_e$response7$data","updateGrade","map","_id","_e$response8","_e$response8$data","deleteGrade","filter","_e$response9","_e$response9$data"],"sources":["E:/Diplom/client/src/store/store.ts"],"sourcesContent":["import { makeAutoObservable } from \"mobx\";\r\nimport { IUser } from \"../models/IUser\";\r\nimport AuthService from \"../services/AuthService\";\r\nimport axios from \"axios\";\r\nimport { AuthResponse } from \"../models/response/AuthResponse\";\r\nimport { API_URL } from \"../http\";\r\nimport GradeService from \"../services/GradeService\"; // Добавьте этот импорт\r\nimport { IGrade } from \"../models/IGrade\"; // Добавьте этот импорт\r\n\r\nexport default class Store {\r\n    user = {} as IUser;\r\n    isAuth = false;\r\n    isLoading = false;\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    setAuth(bool: boolean) {\r\n        this.isAuth = bool;\r\n    }\r\n\r\n    setUser(user: IUser) {\r\n        this.user = user;\r\n    }\r\n\r\n    setLoading(bool: boolean) {\r\n        this.isLoading = bool;\r\n    }\r\n\r\n    getUserId() {\r\n        console.log('User ID:', this.user.id);\r\n        return this.user.id; // Убедитесь, что здесь возвращается строка\r\n    }\r\n\r\n    async login(email: string, password: string) {\r\n        try {\r\n            const response = await AuthService.login(email, password);\r\n            console.log(response)\r\n            localStorage.setItem('token', response.data.accessToken);\r\n            this.setAuth(true);\r\n            this.setUser(response.data.user);\r\n        } catch (e: any) {\r\n            console.log(e.response?.data?.message);\r\n        }\r\n    }\r\n\r\n    async registration(email: string, password: string) {\r\n        try {\r\n            const response = await AuthService.registration(email, password);\r\n            console.log(response)\r\n            localStorage.setItem('token', response.data.accessToken);\r\n            this.setAuth(true);\r\n            this.setUser(response.data.user);\r\n        } catch (e: any) {\r\n            console.log(e.response?.data?.message);\r\n        }\r\n    }\r\n\r\n    async logout() {\r\n        try {\r\n            await AuthService.logout();\r\n            localStorage.removeItem('token');\r\n            this.setAuth(false);\r\n            this.setUser({} as IUser);\r\n        } catch (e: any) {\r\n            console.log(e.response?.data?.message);\r\n        }\r\n    }\r\n\r\n    async checkAuth() {\r\n        this.setLoading(true);\r\n        try {\r\n            const response = await axios.get<AuthResponse>(`${API_URL}/refresh`, { withCredentials: true });\r\n            console.log(response);\r\n            localStorage.setItem('token', response.data.accessToken);\r\n            this.setAuth(true);\r\n            this.setUser(response.data.user);\r\n        } catch (e: any) {\r\n            console.log(e.response?.data?.message);\r\n        } finally {\r\n            this.setLoading(false);\r\n        }\r\n    }\r\n\r\n\r\n    grades: IGrade[] = []; // Добавьте состояние для хранения оценок\r\n    grade: IGrade | null = null; // Добавьте состояние для одной оценки\r\n\r\n    setGrades(grades: IGrade[]) {\r\n        this.grades = grades;\r\n    }\r\n\r\n    setGrade(grade: IGrade) {\r\n        this.grade = grade;\r\n    }\r\n\r\n    async fetchGrades(profileId: string) {\r\n        try {\r\n            const response = await GradeService.getGrades(profileId);\r\n            this.setGrades(response.data);\r\n        } catch (e: any) {\r\n            console.log(e.response?.data?.message);\r\n        }\r\n    }\r\n\r\n    async fetchGrade(gradeId: string) {\r\n        try {\r\n            const response = await GradeService.getGrade(gradeId);\r\n            this.setGrade(response.data);\r\n        } catch (e: any) {\r\n            console.log(e.response?.data?.message);\r\n        }\r\n    }\r\n\r\n    async addGrade(profileId: string, gradeData: Partial<IGrade>) {\r\n        try {\r\n            const response = await GradeService.addGrade(profileId, gradeData);\r\n            this.grades.push(response.data);\r\n        } catch (e: any) {\r\n            console.log(e.response?.data?.message);\r\n        }\r\n    }\r\n\r\n    async updateGrade(gradeId: string, gradeData: Partial<IGrade>) {\r\n        try {\r\n            const response = await GradeService.updateGrade(gradeId, gradeData);\r\n            this.grades = this.grades.map(grade => grade._id === gradeId ? response.data : grade);\r\n        } catch (e: any) {\r\n            console.log(e.response?.data?.message);\r\n        }\r\n    }\r\n\r\n    async deleteGrade(gradeId: string) {\r\n        try {\r\n            await GradeService.deleteGrade(gradeId);\r\n            this.grades = this.grades.filter(grade => grade._id !== gradeId);\r\n        } catch (e: any) {\r\n            console.log(e.response?.data?.message);\r\n        }\r\n    }\r\n\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}